classdef test_split_matrices < matlab.unittest.TestCase

    methods(TestClassSetup)
        % Shared setup for the entire test class
    end

    methods(TestMethodSetup)
        % Setup for each test
    end

    methods(Test)
        % Test methods

        function test_split_matrices10x(testCase)
            c = [...
                1,0,0,5,0,0,0,-50,-20,9;...
                -1,2,0,1,0,0,-11,-18,5,93.5;...
                2,-1,0,13,2,4,-3,-200,12,826;...
                ];
            [~,~,M] = split_matrices(c);
            testCase.assertSize(M,[3,3])
        end
        function test_split_matrices10y(testCase)
            c = [...
                1,0,0,1,0,2,0,-50,-20,9;...
                3,2,3,1,0,2,2,-18,5,93.5;...
                2,-1,0,1,2,2,0,-200,12,826;...
                ];
            [~,~,M] = split_matrices(c);
            testCase.assertSize(M,[3,3])
        end
        function test_split_matrices10z(testCase)
            c = [...
                1,0,0,5,0,0,0,-50,-20,9;...
                1,2,0,1,0,0,0,-18,5,93.5;...
                2,-1,0,13,2,4,0,-200,12,826;...
                ];
            [~,~,M] = split_matrices(c);
            testCase.assertSize(M,[3,3])
        end
        function test_split_matrices10(testCase)
            c = [...
                1,3,4,5,0,0,0,-50,-20,9;...
                1,3,4,1,0,0,-11,-18,5,93.5;...
                1,3,4,13,2,4,-3,-200,12,826;...
                3,3,5,13,2,4,-3,-200,12,826;...
                ];
            [~,~,M] = split_matrices(c,verbose=2);
            testCase.assertSize(M,[3,3])
        end
        function test_split_matrices20x(testCase)
            c  = [1,-3,-2,0,0,0,-1,4,-1,-2,2,6,2,-1,-4,5,-1,-5,2,-2;...
                1,2,-1,-3,0,-1,0,1,-2,2,-4,2,4,3,4,-5,2,-8,2,1;...
                -2,2,1,-4,0,2,-5,0,2,2,1,2,-8,22,-6,-8,9,-20,13,-3;...
                -2,2,-2,-1,0,2,2,-2,-2,2,6,-2,1,-4,9,-5,-4,-4,-5,9;...
                0,-2,0,-1,0,0,-3,0,4,0,-2,6,1,6,-8,-2,3,2,3,-7;...
                ];
            [~,~,M] = split_matrices(c);
            testCase.assertSize(M,[5,5])
        end
        function test_split_matrices20y(testCase)
            c  = [  3,-3,-2,0,0,0,-1,4,-1,-2,2,6,2,-1,-4,5,-1,-5,2,-2;...
                -2,2,-1,-3,0,-1,0,1,-2,2,-4,2,4,3,4,-5,2,-8,2,1;...
                -2,2,1,-4,0,2,-5,0,2,2,1,2,-8,22,4,-8,9,-20,13,-3;...
                -2,2,-2,-1,0,2,2,-2,-2,2,6,-2,1,-4,4,-5,-4,-4,-5,9;...
                -2,-2,0,-1,0,0,-3,0,4,0,-2,6,1,6,0,-2,3,2,3,-7;...
                ];
            [~,~,M] = split_matrices(c);
            testCase.assertSize(M,[5,5])
        end
        function test_split_matrices20z(testCase)
            c  = [  1,-3,-2,0,0,0,-1,4,-1,-2,2,6,2,-1,-4,5,-1,-5,2,-2;...
                1,2,-1,-3,0,-1,0,1,-2,2,-4,2,4,3,4,-5,2,-8,2,1;...
                -2,2,1,-4,0,2,-5,0,2,2,1,2,-8,22,4,-8,9,-20,13,-3;...
                -2,2,-2,-1,0,2,2,-2,-2,2,6,-2,1,-4,4,-5,-4,-4,-5,9;...
                0,-2,0,-1,0,0,-3,0,4,0,-2,6,1,6,0,-2,3,2,3,-7;...
                ];
            [~,~,M] = split_matrices(c);
            testCase.assertSize(M,[5,5])
        end
        function test_split_matrices20(testCase)
            c  = [1,-3,-2,0,0,0,-1,4,-1,-2,2,6,2,-1,-4,5,-1,-5,2,-2;...
                1,2,-1,-3,0,-1,0,1,-2,2,-4,2,4,3,4,-5,2,-8,2,1;...
                -2,2,1,-4,0,2,-5,0,2,2,1,2,-8,22,-6,-8,9,-20,13,-3;...
                -2,2,-2,-1,0,2,2,-2,-2,2,6,-2,1,-4,9,-5,-4,-4,-5,9;...
                0,-2,0,-1,0,0,-3,0,4,0,-2,6,1,6,-8,-2,3,2,3,-7;...
                0,-42,3,-1,0,0,-3,0,5,0,-2,6,3,6,-8,-3,3,2,3,-7;
                ];
            [~,~,M] = split_matrices(c);
            testCase.assertSize(M,[5,5])
        end
    end
end